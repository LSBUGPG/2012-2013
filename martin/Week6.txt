RAM : data
0x0000: playerPositionX
0x0001: playerPositionY
0x0002: playerMoveX
0x0003: playerMoveY

ROM : code notes updatePlayerPositionY: playerPositionY = playerPositionY + playerMoveY
0x0000: 0x0003 load address of playerMoveY into address register
0x0001: 0xFC10 load playerMoveY from memory into data register
0x0002: 0x0001 load address of playerPositionY into address register
0x0003: 0xF088 load playerPositionY + playerMoveY into playerMoveY in RAM checkplayerOffScreen: (playerPositionY >= 480)
0x0004: 0x01E0 load 480 into address register
0x0005: 0xEC10 load value of address register into data register
0x0006: 0x0001 load address of playerPositionY into address register
0x0007: 0xF1D0 load playerPositionY - 480 into data register
0x0008: 0x0010 load ROM address of invertPlayerMoveY code into address register
0x0009: 0xE303 jump to invertPlayerMoveY code if data register >= 0 checkPlayerOffScreen: (playerPositionY < 0)
0x000A: 0x0001 load address of playerPositionY into address register
0x000B: 0xFC10 load playerPositionY into data register
0x000C: 0x0010 load ROM address of invertPlayerMoveY code into address register
0x000D: 0xE304 jump to invertPlayerMoveY code if data register < 0
0x000E: 0x0012 load ROM address of endOfLoop code into address register
0x000F: 0xEFC7 jump to endOfLoop code invertPlayerMoveY: playerMoveY = -playerMoveY
0x0010: 0x0003 load address of playerMoveY into address register
0x0011: 0xFCC8 load -(playerMoveY) into playerMoveY in RAM endOfLoop
0x0012: 0x0000 load ROM address of updatePlayerPositionY code into address register
0x0013: 0xEFC7 jump to updatePlayerPositionY